%!PS-Adobe-2.0 EPSF-2.0
%%Title: restaurant-back-prop+dtl-curve.eps
%%Creator: gnuplot 3.7 patchlevel 0.2
%%CreationDate: Wed Apr 21 15:09:49 2004
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 338 251
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color true def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -80 def
/dl {10 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth } def
/AL { stroke userlinewidth 2 div setlinewidth } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/MFshow {{dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch rmoveto dup dup 5 get exch 4 get
     {show} {stringwidth pop 0 rmoveto}ifelse dup 3 get
     {2 get neg 0 exch rmoveto pop} {pop aload pop moveto}ifelse} forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
      5 get stringwidth pop add}
    {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 240 scalefont setfont
2.000 UL
LTb
949 757 M
-37 0 V
 stroke
768 757 M
[ [(Helvetica) 240.0 0.0 true true (0.4)]
] -80.0 MRshow
949 1255 M
-37 0 V
 stroke
768 1255 M
[ [(Helvetica) 240.0 0.0 true true (0.5)]
] -80.0 MRshow
949 1753 M
-37 0 V
 stroke
768 1753 M
[ [(Helvetica) 240.0 0.0 true true (0.6)]
] -80.0 MRshow
949 2250 M
-37 0 V
 stroke
768 2250 M
[ [(Helvetica) 240.0 0.0 true true (0.7)]
] -80.0 MRshow
949 2748 M
-37 0 V
 stroke
768 2748 M
[ [(Helvetica) 240.0 0.0 true true (0.8)]
] -80.0 MRshow
949 3246 M
-37 0 V
 stroke
768 3246 M
[ [(Helvetica) 240.0 0.0 true true (0.9)]
] -80.0 MRshow
949 3744 M
-37 0 V
 stroke
768 3744 M
[ [(Helvetica) 240.0 0.0 true true (1)]
] -80.0 MRshow
949 757 M
0 -37 V
 stroke
949 480 M
[ [(Helvetica) 240.0 0.0 true true (0)]
] -80.0 MCshow
1418 757 M
0 -37 V
 stroke
1418 480 M
[ [(Helvetica) 240.0 0.0 true true (10)]
] -80.0 MCshow
1887 757 M
0 -37 V
 stroke
1887 480 M
[ [(Helvetica) 240.0 0.0 true true (20)]
] -80.0 MCshow
2356 757 M
0 -37 V
 stroke
2356 480 M
[ [(Helvetica) 240.0 0.0 true true (30)]
] -80.0 MCshow
2825 757 M
0 -37 V
 stroke
2825 480 M
[ [(Helvetica) 240.0 0.0 true true (40)]
] -80.0 MCshow
3294 757 M
0 -37 V
 stroke
3294 480 M
[ [(Helvetica) 240.0 0.0 true true (50)]
] -80.0 MCshow
3764 757 M
0 -37 V
 stroke
3764 480 M
[ [(Helvetica) 240.0 0.0 true true (60)]
] -80.0 MCshow
4233 757 M
0 -37 V
 stroke
4233 480 M
[ [(Helvetica) 240.0 0.0 true true (70)]
] -80.0 MCshow
4702 757 M
0 -37 V
 stroke
4702 480 M
[ [(Helvetica) 240.0 0.0 true true (80)]
] -80.0 MCshow
5171 757 M
0 -37 V
 stroke
5171 480 M
[ [(Helvetica) 240.0 0.0 true true (90)]
] -80.0 MCshow
5640 757 M
0 -37 V
 stroke
5640 480 M
[ [(Helvetica) 240.0 0.0 true true (100)]
] -80.0 MCshow
2.000 UL
LTb
949 757 M
4691 0 V
0 2987 R
-4691 0 R
949 757 L
 stroke
240 2250 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 240.0 0.0 true true (Proportion correct on test set)]
] -80.0 MCshow
grestore
3294 120 M
[ [(Helvetica) 240.0 0.0 true true (Training set size - RESTAURANT data)]
] -80.0 MCshow
6.000 UL
LT0
4558 1753 M
[ [(Helvetica) 240.0 0.0 true true (Decision tree)]
] -80.0 MRshow
4702 1753 M
639 0 V
996 1235 M
47 -36 V
47 30 V
47 703 V
47 177 V
46 499 V
47 -283 V
47 475 V
47 -74 V
47 94 V
47 146 V
47 23 V
47 194 V
47 -44 V
47 -80 V
47 51 V
46 4 V
47 -114 V
47 151 V
47 105 V
47 6 V
47 -45 V
47 0 V
47 16 V
47 -27 V
47 97 V
47 -98 V
46 79 V
47 88 V
47 -62 V
47 95 V
47 -16 V
47 -202 V
47 146 V
47 -18 V
47 63 V
47 -1 V
47 -14 V
46 -11 V
47 31 V
47 -27 V
47 45 V
47 24 V
47 -32 V
47 -79 V
47 158 V
47 0 V
47 -97 V
47 8 V
46 67 V
47 -41 V
47 -64 V
47 124 V
47 -33 V
47 37 V
47 -6 V
47 -53 V
47 87 V
47 -103 V
47 60 V
47 56 V
46 -6 V
47 7 V
47 22 V
47 -21 V
47 30 V
47 -81 V
47 69 V
47 -63 V
47 24 V
47 0 V
47 62 V
46 58 V
47 -91 V
47 1 V
47 -20 V
47 -42 V
47 89 V
47 26 V
47 29 V
47 -60 V
47 59 V
47 -23 V
46 -135 V
47 213 V
47 -77 V
47 26 V
47 -11 V
47 -81 V
47 2 V
47 58 V
47 104 V
47 -80 V
47 -190 V
46 183 V
47 -162 V
47 311 V
47 -249 V
47 249 V
6.000 UL
LT1
4558 1513 M
[ [(Helvetica) 240.0 0.0 true true (Multilayer network)]
] -80.0 MRshow
4702 1513 M
639 0 V
996 1560 M
47 104 V
47 258 V
47 178 V
47 196 V
46 34 V
47 46 V
47 71 V
47 -5 V
47 23 V
47 1 V
47 -15 V
47 -29 V
47 -39 V
47 -24 V
47 35 V
46 22 V
47 -77 V
47 41 V
47 -98 V
47 -5 V
47 62 V
47 48 V
47 25 V
47 -8 V
47 33 V
47 -36 V
46 -5 V
47 -32 V
47 27 V
47 71 V
47 53 V
47 82 V
47 22 V
47 18 V
47 -52 V
47 37 V
47 98 V
46 68 V
47 27 V
47 -51 V
47 35 V
47 -54 V
47 -30 V
47 30 V
47 64 V
47 93 V
47 20 V
47 64 V
46 -26 V
47 -35 V
47 -67 V
47 -65 V
47 16 V
47 8 V
47 -31 V
47 49 V
47 33 V
47 96 V
47 -57 V
47 -42 V
46 110 V
47 0 V
47 -30 V
47 -30 V
47 24 V
47 24 V
47 -65 V
47 7 V
47 5 V
47 41 V
47 60 V
46 39 V
47 40 V
47 -27 V
47 21 V
47 -12 V
47 24 V
47 38 V
47 6 V
47 -37 V
47 -31 V
47 -36 V
46 104 V
47 -152 V
47 42 V
47 73 V
47 32 V
47 24 V
47 29 V
47 -41 V
47 21 V
47 40 V
47 27 V
46 -27 V
47 -31 V
47 80 V
47 33 V
47 39 V
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
